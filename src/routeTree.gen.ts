/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DesignsRouteImport } from './routes/designs'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DesignsComponentsButtonsControlCenterRouteImport } from './routes/designs/components/buttons/control-center'

const DesignsRoute = DesignsRouteImport.update({
  id: '/designs',
  path: '/designs',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DesignsComponentsButtonsControlCenterRoute =
  DesignsComponentsButtonsControlCenterRouteImport.update({
    id: '/components/buttons/control-center',
    path: '/components/buttons/control-center',
    getParentRoute: () => DesignsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/designs': typeof DesignsRouteWithChildren
  '/designs/components/buttons/control-center': typeof DesignsComponentsButtonsControlCenterRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/designs': typeof DesignsRouteWithChildren
  '/designs/components/buttons/control-center': typeof DesignsComponentsButtonsControlCenterRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/designs': typeof DesignsRouteWithChildren
  '/designs/components/buttons/control-center': typeof DesignsComponentsButtonsControlCenterRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/designs'
    | '/designs/components/buttons/control-center'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/designs' | '/designs/components/buttons/control-center'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/designs'
    | '/designs/components/buttons/control-center'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  DesignsRoute: typeof DesignsRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/designs': {
      id: '/designs'
      path: '/designs'
      fullPath: '/designs'
      preLoaderRoute: typeof DesignsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/designs/components/buttons/control-center': {
      id: '/designs/components/buttons/control-center'
      path: '/components/buttons/control-center'
      fullPath: '/designs/components/buttons/control-center'
      preLoaderRoute: typeof DesignsComponentsButtonsControlCenterRouteImport
      parentRoute: typeof DesignsRoute
    }
  }
}

interface DesignsRouteChildren {
  DesignsComponentsButtonsControlCenterRoute: typeof DesignsComponentsButtonsControlCenterRoute
}

const DesignsRouteChildren: DesignsRouteChildren = {
  DesignsComponentsButtonsControlCenterRoute:
    DesignsComponentsButtonsControlCenterRoute,
}

const DesignsRouteWithChildren =
  DesignsRoute._addFileChildren(DesignsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  DesignsRoute: DesignsRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
